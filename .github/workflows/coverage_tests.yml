# This workflow will install dependencies, create coverage tests and run Pytest Coverage Comment
# For more information see: https://github.com/MishaKav/pytest-coverage-comment/
name: pytest-coverage-comment
on:
  push:
  pull_request:

# https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
# `contents` is for permission to the contents of the repository.
# `pull-requests` is for permission to pull request
permissions:
  contents: write
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi

      - name: Build coverage file
        run: |
          pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app Tests/

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./coverage.xml
      
      - name: Check the output coverage
        run: |
            echo "Coverage Percentage - ${{ steps.coverageComment.outputs.coverage }}"
            echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
            echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
  
            echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
  
            echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
            echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
            echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
            echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
            echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
  
            echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
  
      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
          gistID: 5e90d640f8c212ab7bbac38f72323f80
          filename: pytest-coverage-comment__main.json
          label: Coverage Report
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: python